Edges:  88234.0
Adjacency matrix:
[[0. 0. 1. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [1. 0. 0. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]]
Columns 1-norms:
[173.   8.   6. ...   1.   2.   4.]
Column 1-normalized matrix:
[[0.         0.         0.16666667 ... 0.         0.         0.        ]
 [0.         0.         0.         ... 0.         0.         0.        ]
 [0.00578035 0.         0.         ... 0.         0.         0.        ]
 ...
 [0.         0.         0.         ... 0.         0.         0.        ]
 [0.         0.         0.         ... 0.         0.         0.        ]
 [0.         0.         0.         ... 0.         0.         0.        ]]
Similarity matrix:
1000000 iterations
Starting GMRES...
Iteration: 0
Residual: 38.870230466875284
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2626.7 MiB   2626.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4493.5 MiB      0.0 MiB          16   	for j in range(m):
    67   4493.5 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4493.5 MiB      0.0 MiB         120   		for i in range(j):
    69   4493.5 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4493.5 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4493.5 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4493.5 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4493.5 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4493.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4493.5 MiB   4493.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4493.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4493.5 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4493.5 MiB      0.0 MiB         256   		for j in range(m):
    54   4493.5 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4493.5 MiB      0.0 MiB           1   	return H


Iteration time: 90.01223230361938
Iteration: 1
Residual: 4.350326376055415
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.1 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.1 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.1 MiB     -0.2 MiB         120   		for i in range(j):
    69   4618.1 MiB     -0.2 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.1 MiB     -0.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.1 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.1 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.1 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 91.09428405761719
Iteration: 2
Residual: 2.7913355144392593
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.1 MiB     -0.1 MiB          16   	for j in range(m):
    67   4618.1 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.1 MiB     -0.4 MiB         120   		for i in range(j):
    69   4618.1 MiB     -0.4 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.1 MiB     -0.3 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.1 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.1 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.1 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.0 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.0 MiB   4618.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.0 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.0 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.0 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.0 MiB      0.0 MiB           1   	return H


Iteration time: 90.6377329826355
Iteration: 3
Residual: 1.7641463828320847
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.4 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.4 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -0.7 MiB         120   		for i in range(j):
    69   4618.2 MiB     -0.7 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -0.3 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.2 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.2 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.4 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 90.95432305335999
Iteration: 4
Residual: 1.1556699976270979
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.3 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.7 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -0.4 MiB         120   		for i in range(j):
    69   4618.2 MiB     -0.4 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -0.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.1 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.1 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.3 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 90.87431240081787
Iteration: 5
Residual: 0.7976861021287792
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.5 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.4 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -0.5 MiB         120   		for i in range(j):
    69   4618.2 MiB     -0.4 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -0.3 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.1 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.1 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 90.15318179130554
Iteration: 6
Residual: 0.5764099419956477
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.2 MiB   1867.0 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.2 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.53786015510559
Iteration: 7
Residual: 0.4083762890121113
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.6 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.3 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -6.9 MiB         120   		for i in range(j):
    69   4618.2 MiB     -6.3 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -6.2 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.6 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.6 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.6 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 89.58741474151611
Iteration: 8
Residual: 0.26964871916245564
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.1 MiB     -0.8 MiB          16   	for j in range(m):
    67   4618.1 MiB   1865.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.1 MiB     -9.9 MiB         120   		for i in range(j):
    69   4618.1 MiB     -9.1 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.1 MiB     -8.9 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.1 MiB     -0.8 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.1 MiB     -0.8 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.1 MiB     -0.8 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 89.70557117462158
Iteration: 9
Residual: 0.18223616855680752
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.1 MiB   2751.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.2 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB      0.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.61516737937927
Iteration: 10
Residual: 0.13456460411113547
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.7 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.3 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -3.2 MiB         120   		for i in range(j):
    69   4618.2 MiB     -2.6 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -2.5 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.5 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.5 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.7 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 89.6108832359314
Iteration: 11
Residual: 0.09630583827847045
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.1 MiB   2751.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.2 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -2.0 MiB         120   		for i in range(j):
    69   4618.2 MiB     -2.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -1.8 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.2 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.2 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.2 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.54076170921326
Iteration: 12
Residual: 0.05780581902604679
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.3 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.5 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -4.3 MiB         120   		for i in range(j):
    69   4618.2 MiB     -4.3 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -4.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.3 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.3 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.3 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.57101893424988
Iteration: 13
Residual: 0.039489310418786554
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.8 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.1 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -9.8 MiB         120   		for i in range(j):
    69   4618.2 MiB     -9.1 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -9.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.7 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.7 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.8 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 90.78684711456299
Iteration: 14
Residual: 0.02627707766928758
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.1 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.1 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.1 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.1 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.1 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.1 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.1 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.1 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 89.909841299057
Iteration: 15
Residual: 0.018623344425439472
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.1 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.1 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.1 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.1 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.1 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.1 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.1 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.1 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.1 MiB   4618.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.1 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.1 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.1 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.1 MiB      0.0 MiB           1   	return H


Iteration time: 89.88444924354553
Iteration: 16
Residual: 0.012530706678273234
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.1 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -0.2 MiB         120   		for i in range(j):
    69   4618.2 MiB     -0.2 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.6480143070221
Iteration: 17
Residual: 0.008499974467597645
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.2 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.59431171417236
Iteration: 18
Residual: 0.006063349047386812
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.3 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.6 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -1.8 MiB         120   		for i in range(j):
    69   4618.2 MiB     -1.5 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -1.4 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.3 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.3 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.3 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.85401058197021
Iteration: 19
Residual: 0.00424206688904285
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB     -0.1 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -0.6 MiB         120   		for i in range(j):
    69   4618.3 MiB     -0.5 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -0.4 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB     -0.1 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB     -0.1 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.53707027435303
Iteration: 20
Residual: 0.0021374725591449483
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.3 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.57322144508362
Iteration: 21
Residual: 0.0010880282122933396
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB     -0.2 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.7 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -2.7 MiB         120   		for i in range(j):
    69   4618.3 MiB     -2.5 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -2.5 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB     -0.2 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB     -0.2 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB     -0.2 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.77077984809875
Iteration: 22
Residual: 0.0007886139214796367
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.1 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -0.3 MiB         120   		for i in range(j):
    69   4618.2 MiB     -0.3 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -0.2 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.1 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.1 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.6661651134491
Iteration: 23
Residual: 0.0005090045028045456
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.3 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.5 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -3.3 MiB         120   		for i in range(j):
    69   4618.2 MiB     -3.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -2.9 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.3 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.3 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.3 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.62245869636536
Iteration: 24
Residual: 0.0003856663168240199
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -0.6 MiB         120   		for i in range(j):
    69   4618.3 MiB     -0.6 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -0.5 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.62254047393799
Iteration: 25
Residual: 0.0002377019956552991
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.2 MiB     -0.4 MiB          16   	for j in range(m):
    67   4618.2 MiB   1866.6 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.2 MiB     -2.3 MiB         120   		for i in range(j):
    69   4618.2 MiB     -2.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.2 MiB     -2.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.2 MiB     -0.4 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.2 MiB     -0.4 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.2 MiB     -0.4 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.2 MiB   4618.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.2 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.2 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.2 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.2 MiB      0.0 MiB           1   	return H


Iteration time: 89.58860540390015
Iteration: 26
Residual: 0.00016198103949017952
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.3 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB      0.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.5316207408905
Iteration: 27
Residual: 0.00010227274139896139
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -0.5 MiB         120   		for i in range(j):
    69   4618.3 MiB     -0.5 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -0.4 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.56766939163208
Iteration: 28
Residual: 6.384601501079737e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.3 MiB   2751.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.3 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.56821417808533
Iteration: 29
Residual: 3.432779243280801e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.4 MiB   2751.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -0.1 MiB         120   		for i in range(j):
    69   4618.3 MiB     -0.1 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -0.1 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.68088436126709
Iteration: 30
Residual: 1.5745975539050165e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.4 MiB   2751.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB      0.0 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.9 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB      0.0 MiB         120   		for i in range(j):
    69   4618.3 MiB      0.0 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB      0.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB      0.0 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB      0.0 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB      0.0 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.60352349281311
Iteration: 31
Residual: 1.1413041182872358e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2751.2 MiB   2751.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   4618.3 MiB     -0.1 MiB          16   	for j in range(m):
    67   4618.3 MiB   1866.8 MiB          15   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   4618.3 MiB     -1.2 MiB         120   		for i in range(j):
    69   4618.3 MiB     -1.2 MiB         105   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   4618.3 MiB     -1.0 MiB         105   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   4618.3 MiB     -0.1 MiB          15   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   4618.3 MiB     -0.1 MiB          15   		if (h[j+1,j] == 0):
    73                                         			return j
    74   4618.3 MiB     -0.1 MiB          15   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   4618.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   4618.3 MiB   4618.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   4618.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   4618.3 MiB      0.0 MiB          17   	for i in range(m+1):
    53   4618.3 MiB      0.0 MiB         256   		for j in range(m):
    54   4618.3 MiB      0.0 MiB         240   			H[i,j] = h[i,j]
    55   4618.3 MiB      0.0 MiB           1   	return H


Iteration time: 89.64610290527344
Iteration: 32
Residual: 7.34466128564891e-06
Elapsed: 2878.246429204941 s
Iterations [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
Residuals [38.870230466875284, 4.350326376055415, 2.7913355144392593, 1.7641463828320847, 1.1556699976270979, 0.7976861021287792, 0.5764099419956477, 0.4083762890121113, 0.26964871916245564, 0.18223616855680752, 0.13456460411113547, 0.09630583827847045, 0.05780581902604679, 0.039489310418786554, 0.02627707766928758, 0.018623344425439472, 0.012530706678273234, 0.008499974467597645, 0.006063349047386812, 0.00424206688904285, 0.0021374725591449483, 0.0010880282122933396, 0.0007886139214796367, 0.0005090045028045456, 0.0003856663168240199, 0.0002377019956552991, 0.00016198103949017952, 0.00010227274139896139, 6.384601501079737e-05, 3.432779243280801e-05, 1.5745975539050165e-05, 1.1413041182872358e-05, 7.34466128564891e-06]
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    79    385.0 MiB    385.0 MiB           1   @profile
    80                                         def GMRES(k_max, m, A, c, N, eps = 1e-13):
    81    385.0 MiB      0.0 MiB           1   	iterations = []
    82    385.0 MiB      0.0 MiB           1   	residuals = []
    83    385.0 MiB      0.0 MiB           1   	st = time.time()
    84    509.5 MiB    124.6 MiB           1   	I_vec = np.identity(N).reshape((N**2,1), order = 'F')
    85    509.5 MiB      0.0 MiB           1   	s = I_vec
    86   4618.3 MiB     -1.2 MiB          33   	for k in range(k_max):
    87   4618.3 MiB     -1.2 MiB          33   		st_iter = time.time()
    88   4618.3 MiB    124.1 MiB          33   		r = I_vec - G(s, A, c, N)
    89   4618.3 MiB     -1.0 MiB          33   		r = colvecto1dim(r) #reshaping to 1dim vector
    90                                         		
    91   4618.3 MiB     -1.0 MiB          33   		iterations.append(k)
    92   4618.3 MiB     -1.0 MiB          33   		print("Iteration:", k)
    93   4618.3 MiB     -0.8 MiB          33   		residual = np.linalg.norm(I_vec - G(s, A, c, N), ord = 2)
    94   4618.3 MiB     -1.6 MiB          33   		print("Residual:", residual)
    95   4618.3 MiB     -1.6 MiB          33   		residuals.append(residual)
    96   4618.3 MiB     -1.6 MiB          33   		if (residual < eps):
    97   4618.3 MiB      0.0 MiB           1   			break
    98                                         		
    99   4618.3 MiB     -1.6 MiB          32   		beta = np.linalg.norm(r, ord = 2)
   100   2626.9 MiB -61734.8 MiB          32   		V = np.zeros((N**2,m+1)) #V = np.zeros((N**2,m))
   101   4618.3 MiB  63723.0 MiB          32   		V[:,0] = r/beta #v_1 = r_0/beta
   102   2751.4 MiB -57876.4 MiB          32   		W = np.zeros((N**2,m))
   103   2751.4 MiB     -1.5 MiB          32   		h = np.zeros((m+1, m))
   104   4618.3 MiB  59740.9 MiB          32   		m = Arnoldi(V, W, h, m, A, c, N)
   105   4618.3 MiB     -1.1 MiB          32   		H = Hessenberg(h, m)
   106   4618.3 MiB     -1.0 MiB          32   		y = LSq(beta, H)
   107   4618.3 MiB    123.1 MiB          32   		s = s + (V.T[:m].T)@y #V[:m]???
   108   4618.3 MiB     -1.2 MiB          32   		et_iter = time.time()
   109   4618.3 MiB     -1.2 MiB          32   		print("Iteration time:", et_iter - st_iter)
   110   4618.3 MiB      0.0 MiB           1   	et = time.time()
   111                                         	
   112   4618.3 MiB      0.0 MiB           1   	elapsed = et - st
   113   4618.3 MiB      0.0 MiB           1   	print(f"Elapsed: {elapsed} s")
   114   4618.3 MiB      0.0 MiB           1   	print("Iterations", iterations)
   115   4618.3 MiB      0.0 MiB           1   	print("Residuals", residuals)
   116                                         	#plt.figure()
   117                                         	#plt.grid()
   118   4618.3 MiB      0.0 MiB           1   	res_graph = plt.plot(iterations, residuals, color = 'green')
   119   4618.3 MiB      0.0 MiB           1   	plt.yscale('log')
   120   4618.3 MiB      0.0 MiB           1   	plt.xlabel(r'$Iterations$', fontsize = 12) 
   121   4618.3 MiB      0.0 MiB           1   	plt.ylabel(r'$Local\quadresiduals$', fontsize = 12)
   122                                         	
   123   4618.3 MiB      0.0 MiB           1   	S = s.reshape((N,N), order = 'F')
   124   4618.3 MiB      0.0 MiB           1   	return S


Iteration: 0
Residual: 38.870230466875284
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2129.1 MiB   2129.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3373.8 MiB     -0.1 MiB          11   	for j in range(m):
    67   3373.8 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3373.8 MiB     -0.3 MiB          55   		for i in range(j):
    69   3373.8 MiB     -0.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3373.8 MiB     -0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3373.8 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3373.8 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3373.8 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3373.8 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3373.8 MiB   3373.8 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3373.8 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3373.8 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3373.8 MiB      0.0 MiB         121   		for j in range(m):
    54   3373.8 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3373.8 MiB      0.0 MiB           1   	return H


Iteration time: 41.598084688186646
Iteration: 1
Residual: 4.838087873325067
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.75917649269104
Iteration: 2
Residual: 3.8130827562395084
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.7 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.7 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.7 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.71885800361633
Iteration: 3
Residual: 2.883414970304533
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.4 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.1 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.7 MiB          55   		for i in range(j):
    69   3498.2 MiB     -3.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -3.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.4 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.4 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.4 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.76582717895508
Iteration: 4
Residual: 2.0922907541953575
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.4 MiB   2253.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB     -0.3 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -2.6 MiB          55   		for i in range(j):
    69   3498.1 MiB     -2.3 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB     -2.3 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB     -0.3 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB     -0.3 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB     -0.3 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.0 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.0 MiB   3498.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.0 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.0 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.0 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.0 MiB      0.0 MiB           1   	return H


Iteration time: 41.78769111633301
Iteration: 5
Residual: 1.7571134187956523
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.77854371070862
Iteration: 6
Residual: 1.1973481238502208
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.76614236831665
Iteration: 7
Residual: 0.9255809543659278
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.3 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.3 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.77545142173767
Iteration: 8
Residual: 0.6981412024091136
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.76005220413208
Iteration: 9
Residual: 0.5540540050077057
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.1 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79218149185181
Iteration: 10
Residual: 0.4156316315298297
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.2 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -1.8 MiB          55   		for i in range(j):
    69   3498.2 MiB     -1.6 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -1.5 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.2 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.70470857620239
Iteration: 11
Residual: 0.3446388867465365
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79098606109619
Iteration: 12
Residual: 0.2976385517054146
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.2 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -2.3 MiB          55   		for i in range(j):
    69   3498.2 MiB     -2.1 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -2.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.2 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.701282262802124
Iteration: 13
Residual: 0.24684186936872304
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79264235496521
Iteration: 14
Residual: 0.21429899231113272
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.796133518218994
Iteration: 15
Residual: 0.18088419637481193
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79092812538147
Iteration: 16
Residual: 0.1643177047030988
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.66611671447754
Iteration: 17
Residual: 0.12177131143837576
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79049062728882
Iteration: 18
Residual: 0.10462800885432302
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.8 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.8 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.8 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.65399169921875
Iteration: 19
Residual: 0.06179067536651753
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.74433255195618
Iteration: 20
Residual: 0.039000209479221434
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.4 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.1 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -2.7 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -2.6 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.4 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.4 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.4 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.77898097038269
Iteration: 21
Residual: 0.02505573228784218
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.7 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.79363656044006
Iteration: 22
Residual: 0.016936630088473025
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -1.0 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.9 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.9 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.95687770843506
Iteration: 23
Residual: 0.013975460336087086
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.5 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.1 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.5 MiB          55   		for i in range(j):
    69   3498.2 MiB     -3.5 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -3.4 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.5 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.5 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.5 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.85762929916382
Iteration: 24
Residual: 0.011920399513976917
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.4 MiB   2253.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -0.7 MiB          55   		for i in range(j):
    69   3498.1 MiB     -0.7 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB     -0.5 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.953609466552734
Iteration: 25
Residual: 0.00933269156675509
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -0.0 MiB          55   		for i in range(j):
    69   3498.1 MiB     -0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB     -0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB     -0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB     -0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB     -0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.709877490997314
Iteration: 26
Residual: 0.008088215142426153
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -1.3 MiB          11   	for j in range(m):
    67   3498.2 MiB   1243.3 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.4 MiB          55   		for i in range(j):
    69   3498.2 MiB     -6.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -6.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -1.3 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -1.3 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -1.3 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.78003406524658
Iteration: 27
Residual: 0.006279653346858667
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.4 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.4 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.4 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.690935373306274
Iteration: 28
Residual: 0.005083795413882827
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.5 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.4 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.3 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.92305111885071
Iteration: 29
Residual: 0.003646135654076535
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.9 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.8 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.6 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 42.8493173122406
Iteration: 30
Residual: 0.0030398369262949424
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.3 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.2 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -2.9 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -2.7 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.3 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 42.29567527770996
Iteration: 31
Residual: 0.0021367338410653285
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.4 MiB   2253.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.1 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 42.415441036224365
Iteration: 32
Residual: 0.001677197025654366
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.4 MiB   2253.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.7 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.1 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB      0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.94133377075195
Iteration: 33
Residual: 0.001433246579500517
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB     -0.6 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.0 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -3.8 MiB          55   		for i in range(j):
    69   3498.1 MiB     -3.3 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB     -3.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB     -0.5 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB     -0.5 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB     -0.6 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.98800086975098
Iteration: 34
Residual: 0.0011532961903685606
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.2 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.92934775352478
Iteration: 35
Residual: 0.0010510447834095231
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -1.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -1.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.9 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.61500310897827
Iteration: 36
Residual: 0.0007588411260140215
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.2 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -1.3 MiB          55   		for i in range(j):
    69   3498.2 MiB     -1.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -1.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.2 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.69735026359558
Iteration: 37
Residual: 0.0006557586898553356
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.4 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.3 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -2.2 MiB          55   		for i in range(j):
    69   3498.2 MiB     -2.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -1.9 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.3 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.3 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.4 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 42.26998949050903
Iteration: 38
Residual: 0.0005140701342093969
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.4 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.3 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -3.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -2.7 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -2.7 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.4 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.4 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.4 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 42.160765647888184
Iteration: 39
Residual: 0.0004339876196459042
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.8 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.8 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.5 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.635353565216064
Iteration: 40
Residual: 0.00034850711446980507
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.1 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.1 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.1 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.67645573616028
Iteration: 41
Residual: 0.00030160032856697523
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.8 MiB          11   	for j in range(m):
    67   3498.2 MiB   1243.8 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -6.8 MiB          55   		for i in range(j):
    69   3498.2 MiB     -5.9 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -5.9 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.8 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.8 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.8 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.0 MiB     -0.2 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.0 MiB   3498.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.0 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.0 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.0 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.0 MiB      0.0 MiB           1   	return H


Iteration time: 41.57757925987244
Iteration: 42
Residual: 0.0002381036344769968
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.4 MiB   2253.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -0.5 MiB          55   		for i in range(j):
    69   3498.1 MiB     -0.5 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB     -0.4 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.56399440765381
Iteration: 43
Residual: 0.00021010211810121152
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.1 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.65107250213623
Iteration: 44
Residual: 0.00015151572974904547
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.1 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.1 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.1 MiB     -0.1 MiB          55   		for i in range(j):
    69   3498.1 MiB     -0.1 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.1 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.1 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.1 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.1 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.1 MiB   3498.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.1 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.1 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.1 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.1 MiB      0.0 MiB           1   	return H


Iteration time: 41.6234610080719
Iteration: 45
Residual: 0.00012365104072553515
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.5 MiB   2253.5 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.3 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.4 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -1.9 MiB          55   		for i in range(j):
    69   3498.2 MiB     -1.7 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -1.6 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.3 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 42.08858585357666
Iteration: 46
Residual: 8.552609585519617e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.2 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.2 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -2.0 MiB          55   		for i in range(j):
    69   3498.2 MiB     -1.8 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -1.5 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.2 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.2 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.2 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 42.19704723358154
Iteration: 47
Residual: 6.466247967253466e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.59957432746887
Iteration: 48
Residual: 4.834757430511977e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.2 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.2 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.2 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.73820924758911
Iteration: 49
Residual: 3.9380182074483656e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.5 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.5 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.4 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.68549036979675
Iteration: 50
Residual: 2.7634703873595948e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB     -0.1 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.5 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB     -0.5 MiB          55   		for i in range(j):
    69   3498.2 MiB     -0.4 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB     -0.4 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB     -0.1 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB     -0.1 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB     -0.1 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.550814390182495
Iteration: 51
Residual: 2.1143625182824164e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.732468605041504
Iteration: 52
Residual: 1.314212437138042e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   2253.6 MiB   2253.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   3498.2 MiB      0.0 MiB          11   	for j in range(m):
    67   3498.2 MiB   1244.6 MiB          10   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   3498.2 MiB      0.0 MiB          55   		for i in range(j):
    69   3498.2 MiB      0.0 MiB          45   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   3498.2 MiB      0.0 MiB          45   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   3498.2 MiB      0.0 MiB          10   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   3498.2 MiB      0.0 MiB          10   		if (h[j+1,j] == 0):
    73                                         			return j
    74   3498.2 MiB      0.0 MiB          10   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   3498.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   3498.2 MiB   3498.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   3498.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   3498.2 MiB      0.0 MiB          12   	for i in range(m+1):
    53   3498.2 MiB      0.0 MiB         121   		for j in range(m):
    54   3498.2 MiB      0.0 MiB         110   			H[i,j] = h[i,j]
    55   3498.2 MiB      0.0 MiB           1   	return H


Iteration time: 41.552053928375244
Iteration: 53
Residual: 8.747549280419711e-06
Elapsed: 2219.113743543625 s
Iterations [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]
Residuals [38.870230466875284, 4.838087873325067, 3.8130827562395084, 2.883414970304533, 2.0922907541953575, 1.7571134187956523, 1.1973481238502208, 0.9255809543659278, 0.6981412024091136, 0.5540540050077057, 0.4156316315298297, 0.3446388867465365, 0.2976385517054146, 0.24684186936872304, 0.21429899231113272, 0.18088419637481193, 0.1643177047030988, 0.12177131143837576, 0.10462800885432302, 0.06179067536651753, 0.039000209479221434, 0.02505573228784218, 0.016936630088473025, 0.013975460336087086, 0.011920399513976917, 0.00933269156675509, 0.008088215142426153, 0.006279653346858667, 0.005083795413882827, 0.003646135654076535, 0.0030398369262949424, 0.0021367338410653285, 0.001677197025654366, 0.001433246579500517, 0.0011532961903685606, 0.0010510447834095231, 0.0007588411260140215, 0.0006557586898553356, 0.0005140701342093969, 0.0004339876196459042, 0.00034850711446980507, 0.00030160032856697523, 0.0002381036344769968, 0.00021010211810121152, 0.00015151572974904547, 0.00012365104072553515, 8.552609585519617e-05, 6.466247967253466e-05, 4.834757430511977e-05, 3.9380182074483656e-05, 2.7634703873595948e-05, 2.1143625182824164e-05, 1.314212437138042e-05, 8.747549280419711e-06]
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    79    511.1 MiB    511.1 MiB           1   @profile
    80                                         def GMRES(k_max, m, A, c, N, eps = 1e-13):
    81    511.1 MiB      0.0 MiB           1   	iterations = []
    82    511.1 MiB      0.0 MiB           1   	residuals = []
    83    511.1 MiB      0.0 MiB           1   	st = time.time()
    84    635.6 MiB    124.5 MiB           1   	I_vec = np.identity(N).reshape((N**2,1), order = 'F')
    85    635.6 MiB      0.0 MiB           1   	s = I_vec
    86   3498.2 MiB     -3.0 MiB          54   	for k in range(k_max):
    87   3498.2 MiB     -3.0 MiB          54   		st_iter = time.time()
    88   3498.2 MiB    121.3 MiB          54   		r = I_vec - G(s, A, c, N)
    89   3498.2 MiB     -3.2 MiB          54   		r = colvecto1dim(r) #reshaping to 1dim vector
    90                                         		
    91   3498.2 MiB     -3.2 MiB          54   		iterations.append(k)
    92   3498.2 MiB     -3.2 MiB          54   		print("Iteration:", k)
    93   3498.2 MiB     -3.5 MiB          54   		residual = np.linalg.norm(I_vec - G(s, A, c, N), ord = 2)
    94   3498.2 MiB     -3.4 MiB          54   		print("Residual:", residual)
    95   3498.2 MiB     -3.4 MiB          54   		residuals.append(residual)
    96   3498.2 MiB     -3.4 MiB          54   		if (residual < eps):
    97   3498.2 MiB      0.0 MiB           1   			break
    98                                         		
    99   3498.2 MiB     -3.4 MiB          53   		beta = np.linalg.norm(r, ord = 2)
   100   2129.2 MiB -71195.6 MiB          53   		V = np.zeros((N**2,m+1)) #V = np.zeros((N**2,m))
   101   3498.2 MiB  72557.9 MiB          53   		V[:,0] = r/beta #v_1 = r_0/beta
   102   2253.6 MiB -64723.6 MiB          53   		W = np.zeros((N**2,m))
   103   2253.6 MiB     -3.3 MiB          53   		h = np.zeros((m+1, m))
   104   3498.2 MiB  65962.0 MiB          53   		m = Arnoldi(V, W, h, m, A, c, N)
   105   3498.2 MiB     -3.0 MiB          53   		H = Hessenberg(h, m)
   106   3498.2 MiB     -3.0 MiB          53   		y = LSq(beta, H)
   107   3498.2 MiB    121.3 MiB          53   		s = s + (V.T[:m].T)@y #V[:m]???
   108   3498.2 MiB     -3.0 MiB          53   		et_iter = time.time()
   109   3498.2 MiB     -3.0 MiB          53   		print("Iteration time:", et_iter - st_iter)
   110   3498.2 MiB      0.0 MiB           1   	et = time.time()
   111                                         	
   112   3498.2 MiB      0.0 MiB           1   	elapsed = et - st
   113   3498.2 MiB      0.0 MiB           1   	print(f"Elapsed: {elapsed} s")
   114   3498.2 MiB      0.0 MiB           1   	print("Iterations", iterations)
   115   3498.2 MiB      0.0 MiB           1   	print("Residuals", residuals)
   116                                         	#plt.figure()
   117                                         	#plt.grid()
   118   3498.2 MiB      0.0 MiB           1   	res_graph = plt.plot(iterations, residuals, color = 'green')
   119   3498.2 MiB      0.0 MiB           1   	plt.yscale('log')
   120   3498.2 MiB      0.0 MiB           1   	plt.xlabel(r'$Iterations$', fontsize = 12) 
   121   3498.2 MiB      0.0 MiB           1   	plt.ylabel(r'$Local\quadresiduals$', fontsize = 12)
   122                                         	
   123   3498.2 MiB      0.0 MiB           1   	S = s.reshape((N,N), order = 'F')
   124   3498.2 MiB      0.0 MiB           1   	return S


Iteration: 0
Residual: 38.870230466875284
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1506.9 MiB   1506.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2129.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2129.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2129.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2129.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2129.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2129.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2129.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2129.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2129.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2129.2 MiB   2129.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2129.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2129.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2129.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2129.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2129.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.543227195739746
Iteration: 1
Residual: 7.338343876887075
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.654504776000977
Iteration: 2
Residual: 5.8102789964607675
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.654554605484009
Iteration: 3
Residual: 5.179336589467739
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.6 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.6 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.6 MiB   2253.6 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.6 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.6 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.6 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.6 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.6 MiB      0.0 MiB           1   	return H


Iteration time: 13.647268772125244
Iteration: 4
Residual: 4.726115960112703
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.6 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.6 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.6 MiB   2253.6 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.6 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.6 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.6 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.6 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.6 MiB      0.0 MiB           1   	return H


Iteration time: 13.642621755599976
Iteration: 5
Residual: 4.150421613076601
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.6 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.6 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.6 MiB   2253.6 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.6 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.6 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.6 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.6 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.6 MiB      0.0 MiB           1   	return H


Iteration time: 13.653748273849487
Iteration: 6
Residual: 4.240576393406175
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.6 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.853415489196777
Iteration: 7
Residual: 3.2578128944972917
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.6 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.6 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.6 MiB   2253.6 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.6 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.6 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.6 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.6 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.6 MiB      0.0 MiB           1   	return H


Iteration time: 13.809945583343506
Iteration: 8
Residual: 2.976937417430085
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB     -0.4 MiB          15   		for i in range(j):
    69   2253.6 MiB     -0.3 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB     -0.3 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.893735885620117
Iteration: 9
Residual: 1.8948866380925742
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.7 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.7 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.7 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.7 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.7 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.7 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.7 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.7 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.7 MiB   2253.7 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.7 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.7 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.7 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.7 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.7 MiB      0.0 MiB           1   	return H


Iteration time: 13.789158821105957
Iteration: 10
Residual: 1.4359493211666905
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.4 MiB   1631.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.7 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.7 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.7 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.7 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.7 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.7 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.7 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.7 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.7 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.7 MiB   2253.7 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.7 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.7 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.7 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.7 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.7 MiB      0.0 MiB           1   	return H


Iteration time: 13.824793577194214
Iteration: 11
Residual: 0.9550055641312788
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.4 MiB   1631.4 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.7 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.7 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.7 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.7 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.7 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.7 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.7 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.7 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.7 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.7 MiB   2253.7 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.7 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.7 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.7 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.7 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.7 MiB      0.0 MiB           1   	return H


Iteration time: 13.901225805282593
Iteration: 12
Residual: 0.7648979371512532
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.3 MiB   1631.3 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB     -0.7 MiB          15   		for i in range(j):
    69   2253.6 MiB     -0.6 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB     -0.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.983972311019897
Iteration: 13
Residual: 0.6508864692270696
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB     -0.3 MiB           6   	for j in range(m):
    67   2253.6 MiB    622.0 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.6 MiB     -0.6 MiB          15   		for i in range(j):
    69   2253.6 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.6 MiB     -0.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.6 MiB     -0.3 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.6 MiB     -0.3 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.6 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.6 MiB   2253.6 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.6 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.6 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.6 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.6 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.6 MiB      0.0 MiB           1   	return H


Iteration time: 13.896276235580444
Iteration: 14
Residual: 0.6482808725578744
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.7 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.7 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.7 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.7 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.7 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.8 MiB      0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.8 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.7 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.7 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.7 MiB   2253.7 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.7 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.7 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.7 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.7 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.7 MiB      0.0 MiB           1   	return H


Iteration time: 14.388980865478516
Iteration: 15
Residual: 0.6030968384639691
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.2 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.1 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.226012468338013
Iteration: 16
Residual: 0.6182968806644381
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.868943452835083
Iteration: 17
Residual: 0.4628132420664785
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.3 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.269047498703003
Iteration: 18
Residual: 0.4508345485263261
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.186597108840942
Iteration: 19
Residual: 0.2678390020069392
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.928246021270752
Iteration: 20
Residual: 0.17691327243954177
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.073149681091309
Iteration: 21
Residual: 0.15808010181031348
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.976982593536377
Iteration: 22
Residual: 0.16779500507109318
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 14.206227779388428
Iteration: 23
Residual: 0.13298254421196382
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.3 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 14.115082263946533
Iteration: 24
Residual: 0.12461982127007579
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.036240816116333
Iteration: 25
Residual: 0.08760867827597828
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 14.31996774673462
Iteration: 26
Residual: 0.07601154627404774
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 14.01508617401123
Iteration: 27
Residual: 0.06857674321548145
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.3 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.287742853164673
Iteration: 28
Residual: 0.06582075696011806
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.1 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.164444208145142
Iteration: 29
Residual: 0.06295973734269635
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.796419143676758
Iteration: 30
Residual: 0.06685333444041083
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.91507887840271
Iteration: 31
Residual: 0.041417314651339805
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.871694326400757
Iteration: 32
Residual: 0.03355551314324717
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.146176099777222
Iteration: 33
Residual: 0.01624306627028395
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.885285377502441
Iteration: 34
Residual: 0.00780663730200492
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.937877893447876
Iteration: 35
Residual: 0.006719085011472872
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.118410587310791
Iteration: 36
Residual: 0.006991250877448673
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.028452396392822
Iteration: 37
Residual: 0.006428649489066059
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.03872799873352
Iteration: 38
Residual: 0.005018398719506986
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.994301795959473
Iteration: 39
Residual: 0.004915992373132006
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.198527574539185
Iteration: 40
Residual: 0.004923398441908073
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.03749966621399
Iteration: 41
Residual: 0.00442154137577657
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.3 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.0 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -1.1 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.8 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.3 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.3 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.735561609268188
Iteration: 42
Residual: 0.004632473828728157
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.3 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.305402755737305
Iteration: 43
Residual: 0.003950079772261581
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.892802476882935
Iteration: 44
Residual: 0.0038386109991375345
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.953004837036133
Iteration: 45
Residual: 0.003343581019761174
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.2 MiB   1631.2 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.6 MiB     -0.5 MiB           6   	for j in range(m):
    67   2253.5 MiB    621.9 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -1.0 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.8 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.3 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.3 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.6 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.2 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.012062788009644
Iteration: 46
Residual: 0.0027798791642516018
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.1 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.1 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.851558446884155
Iteration: 47
Residual: 0.002751916255758242
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.4 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 14.005269527435303
Iteration: 48
Residual: 0.002897396055016073
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.2 MiB          15   		for i in range(j):
    69   2253.3 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.919889450073242
Iteration: 49
Residual: 0.0025951046084202864
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.836199522018433
Iteration: 50
Residual: 0.0026406199313493786
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.949047088623047
Iteration: 51
Residual: 0.0021912172709859967
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.0 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.7 MiB          15   		for i in range(j):
    69   2253.3 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -0.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.992203712463379
Iteration: 52
Residual: 0.002026944040877405
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.768718242645264
Iteration: 53
Residual: 0.001888649278093543
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.874460220336914
Iteration: 54
Residual: 0.0019792695734675383
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.9 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.3 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.3 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.4 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.919280529022217
Iteration: 55
Residual: 0.001544540559617136
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.878941774368286
Iteration: 56
Residual: 0.0014620451132738505
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.777602910995483
Iteration: 57
Residual: 0.0010579938572380853
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.972260475158691
Iteration: 58
Residual: 0.0009031933686193104
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.4 MiB           6   	for j in range(m):
    67   2253.3 MiB    621.9 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -1.6 MiB          15   		for i in range(j):
    69   2253.3 MiB     -1.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -1.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.4 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.4 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.4 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.1 MiB     -0.2 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.1 MiB   2253.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.1 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.1 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.1 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.1 MiB      0.0 MiB           1   	return H


Iteration time: 13.951625347137451
Iteration: 59
Residual: 0.000458551527532436
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.8 MiB   1630.8 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.774468183517456
Iteration: 60
Residual: 0.00024248666530190114
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.7 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.832915782928467
Iteration: 61
Residual: 0.0001768288477195616
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.874699592590332
Iteration: 62
Residual: 0.000155371647548482
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.2 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.933230876922607
Iteration: 63
Residual: 0.0001349891004613703
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 14.0050790309906
Iteration: 64
Residual: 0.00013721437709081143
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.0 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB      0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.5 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.5 MiB   2253.5 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.5 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.5 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.5 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.5 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.5 MiB      0.0 MiB           1   	return H


Iteration time: 13.804869413375854
Iteration: 65
Residual: 0.00011349307501912547
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.5 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.5 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.5 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.5 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.5 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.5 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.5 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.5 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.892996549606323
Iteration: 66
Residual: 0.00010869223167019405
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.4 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.4 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.4 MiB   2253.4 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.4 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.4 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.4 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.4 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.4 MiB      0.0 MiB           1   	return H


Iteration time: 13.830232381820679
Iteration: 67
Residual: 8.941096006164394e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.872477054595947
Iteration: 68
Residual: 5.270699258716152e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.1 MiB   1631.1 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.4 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.4 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.4 MiB     -1.1 MiB          15   		for i in range(j):
    69   2253.4 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.4 MiB     -0.8 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.4 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.4 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.4 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 14.058055400848389
Iteration: 69
Residual: 4.809667472805935e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.801013469696045
Iteration: 70
Residual: 4.280687326177481e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB     -0.3 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.0 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -0.7 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB     -0.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB     -0.3 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB     -0.3 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.1 MiB     -0.2 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.1 MiB   2253.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.1 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.1 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.1 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.1 MiB      0.0 MiB           1   	return H


Iteration time: 13.740098476409912
Iteration: 71
Residual: 4.2738812095500265e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.8 MiB   1630.8 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -0.5 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 14.232134819030762
Iteration: 72
Residual: 4.3908469818368746e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB     -0.5 MiB           6   	for j in range(m):
    67   2253.2 MiB    621.9 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -1.9 MiB          15   		for i in range(j):
    69   2253.2 MiB     -1.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB     -1.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB     -0.4 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB     -0.4 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.5 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.0 MiB     -0.2 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.0 MiB   2253.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.0 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.0 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.0 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.0 MiB      0.0 MiB           1   	return H


Iteration time: 13.993641138076782
Iteration: 73
Residual: 4.3192525050632626e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.7 MiB   1630.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.1 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.1 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.1 MiB     -0.7 MiB          15   		for i in range(j):
    69   2253.1 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.1 MiB     -0.5 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.1 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.1 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.1 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.1 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.1 MiB   2253.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.1 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.1 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.1 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.1 MiB      0.0 MiB           1   	return H


Iteration time: 13.852330207824707
Iteration: 74
Residual: 4.035256709149739e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -0.2 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.8193678855896
Iteration: 75
Residual: 4.061501149800706e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.8 MiB   1630.8 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB     -0.6 MiB          15   		for i in range(j):
    69   2253.2 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.713859558105469
Iteration: 76
Residual: 4.2646187779935276e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.721360921859741
Iteration: 77
Residual: 3.97313445613849e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.72693920135498
Iteration: 78
Residual: 4.0936870765365346e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.726198673248291
Iteration: 79
Residual: 3.6498459958544094e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.4 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 13.730995416641235
Iteration: 80
Residual: 3.527297825241835e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.8 MiB          15   		for i in range(j):
    69   2253.3 MiB     -0.7 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -0.3 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.3 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.88708233833313
Iteration: 81
Residual: 3.392746212920682e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.96652626991272
Iteration: 82
Residual: 3.559459000973132e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.9 MiB   1630.9 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.2 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.2 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.2 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.2 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.2 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.2 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.2 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.2 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.90049958229065
Iteration: 83
Residual: 3.200830545737009e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.8 MiB   1630.8 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.3 MiB          15   		for i in range(j):
    69   2253.3 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 14.003679752349854
Iteration: 84
Residual: 3.231254083432582e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.3 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.3 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.3 MiB   2253.3 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.3 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.3 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.3 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.3 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.3 MiB      0.0 MiB           1   	return H


Iteration time: 14.015146732330322
Iteration: 85
Residual: 2.861410928396767e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1631.0 MiB   1631.0 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.3 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.3 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.3 MiB     -0.4 MiB          15   		for i in range(j):
    69   2253.3 MiB     -0.3 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.3 MiB     -0.3 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.3 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.3 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.3 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.2 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.2 MiB   2253.2 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.2 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.2 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.2 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.2 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.2 MiB      0.0 MiB           1   	return H


Iteration time: 13.946319103240967
Iteration: 86
Residual: 2.4273171230544676e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.7 MiB   1630.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.1 MiB     -0.0 MiB           6   	for j in range(m):
    67   2253.1 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.1 MiB     -0.2 MiB          15   		for i in range(j):
    69   2253.1 MiB     -0.2 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.1 MiB     -0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.1 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.1 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.1 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.1 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.1 MiB   2253.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.1 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.1 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.1 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.1 MiB      0.0 MiB           1   	return H


Iteration time: 14.002374410629272
Iteration: 87
Residual: 2.419078878963066e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.7 MiB   1630.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2252.9 MiB     -0.2 MiB           6   	for j in range(m):
    67   2252.9 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2252.9 MiB     -0.6 MiB          15   		for i in range(j):
    69   2252.9 MiB     -0.5 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2252.9 MiB     -0.4 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2252.9 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2252.9 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2252.9 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2252.9 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2252.9 MiB   2252.9 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2252.9 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2252.9 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2252.9 MiB      0.0 MiB          36   		for j in range(m):
    54   2252.9 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2252.9 MiB      0.0 MiB           1   	return H


Iteration time: 14.185883522033691
Iteration: 88
Residual: 2.5424912703998885e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.6 MiB   1630.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2252.9 MiB     -0.0 MiB           6   	for j in range(m):
    67   2252.9 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2252.9 MiB     -0.1 MiB          15   		for i in range(j):
    69   2252.9 MiB     -0.1 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2252.9 MiB     -0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2252.9 MiB     -0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2252.9 MiB     -0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2252.9 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2252.9 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2252.9 MiB   2252.9 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2252.9 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2252.9 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2252.9 MiB      0.0 MiB          36   		for j in range(m):
    54   2252.9 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2252.9 MiB      0.0 MiB           1   	return H


Iteration time: 14.045154809951782
Iteration: 89
Residual: 1.768450640279226e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.6 MiB   1630.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.0 MiB     -0.1 MiB           6   	for j in range(m):
    67   2253.0 MiB    622.2 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.0 MiB     -0.4 MiB          15   		for i in range(j):
    69   2253.0 MiB     -0.4 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.0 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.0 MiB     -0.1 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.0 MiB     -0.1 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.0 MiB     -0.1 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.0 MiB     -0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.0 MiB   2253.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.0 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.0 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.0 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.0 MiB      0.0 MiB           1   	return H


Iteration time: 14.02112340927124
Iteration: 90
Residual: 1.552941437287515e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.7 MiB   1630.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.0 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.0 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.0 MiB      0.0 MiB          15   		for i in range(j):
    69   2253.0 MiB      0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.0 MiB      0.0 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.0 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.0 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.0 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.0 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.0 MiB   2253.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.0 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.0 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.0 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.0 MiB      0.0 MiB           1   	return H


Iteration time: 13.96464228630066
Iteration: 91
Residual: 1.1952160460378251e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.6 MiB   1630.6 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.1 MiB     -0.2 MiB           6   	for j in range(m):
    67   2253.1 MiB    622.1 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.1 MiB     -0.8 MiB          15   		for i in range(j):
    69   2253.1 MiB     -0.8 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.1 MiB     -0.3 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.1 MiB     -0.2 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.1 MiB     -0.2 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.1 MiB     -0.2 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.0 MiB     -0.1 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.0 MiB   2253.0 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.0 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.0 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.0 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.0 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.0 MiB      0.0 MiB           1   	return H


Iteration time: 14.060143947601318
Iteration: 92
Residual: 1.075029126277115e-05
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    64   1630.7 MiB   1630.7 MiB           1   @profile
    65                                         def Arnoldi(V, W, h, m, A, c, N):
    66   2253.1 MiB      0.0 MiB           6   	for j in range(m):
    67   2253.1 MiB    622.3 MiB           5   		W[:,j] = colvecto1dim( G(V[:,j], A, c, N) )
    68   2253.1 MiB     -0.0 MiB          15   		for i in range(j):
    69   2253.1 MiB     -0.0 MiB          10   			h[i,j] = V[:,i].T@W[:,j] #Note: .T to underline that is is a dot product
    70   2253.1 MiB      0.1 MiB          10   			W[:,j] = W[:,j] - h[i,j]*V[:,i]
    71   2253.1 MiB      0.0 MiB           5   		h[j+1,j] = np.linalg.norm(W[:,j],ord = 2)
    72   2253.1 MiB      0.0 MiB           5   		if (h[j+1,j] == 0):
    73                                         			return j
    74   2253.1 MiB      0.0 MiB           5   		V[:,j+1] = W[:,j]/h[j+1,j]
    75   2253.1 MiB      0.0 MiB           1   	return m


Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    49   2253.1 MiB   2253.1 MiB           1   @profile
    50                                         def Hessenberg(h, m):
    51   2253.1 MiB      0.0 MiB           1   	H = np.zeros((m+1, m))
    52   2253.1 MiB      0.0 MiB           7   	for i in range(m+1):
    53   2253.1 MiB      0.0 MiB          36   		for j in range(m):
    54   2253.1 MiB      0.0 MiB          30   			H[i,j] = h[i,j]
    55   2253.1 MiB      0.0 MiB           1   	return H


Iteration time: 14.064455032348633
Iteration: 93
Residual: 8.759841034537127e-06
Elapsed: 1299.1608695983887 s
Iterations [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]
Residuals [38.870230466875284, 7.338343876887075, 5.8102789964607675, 5.179336589467739, 4.726115960112703, 4.150421613076601, 4.240576393406175, 3.2578128944972917, 2.976937417430085, 1.8948866380925742, 1.4359493211666905, 0.9550055641312788, 0.7648979371512532, 0.6508864692270696, 0.6482808725578744, 0.6030968384639691, 0.6182968806644381, 0.4628132420664785, 0.4508345485263261, 0.2678390020069392, 0.17691327243954177, 0.15808010181031348, 0.16779500507109318, 0.13298254421196382, 0.12461982127007579, 0.08760867827597828, 0.07601154627404774, 0.06857674321548145, 0.06582075696011806, 0.06295973734269635, 0.06685333444041083, 0.041417314651339805, 0.03355551314324717, 0.01624306627028395, 0.00780663730200492, 0.006719085011472872, 0.006991250877448673, 0.006428649489066059, 0.005018398719506986, 0.004915992373132006, 0.004923398441908073, 0.00442154137577657, 0.004632473828728157, 0.003950079772261581, 0.0038386109991375345, 0.003343581019761174, 0.0027798791642516018, 0.002751916255758242, 0.002897396055016073, 0.0025951046084202864, 0.0026406199313493786, 0.0021912172709859967, 0.002026944040877405, 0.001888649278093543, 0.0019792695734675383, 0.001544540559617136, 0.0014620451132738505, 0.0010579938572380853, 0.0009031933686193104, 0.000458551527532436, 0.00024248666530190114, 0.0001768288477195616, 0.000155371647548482, 0.0001349891004613703, 0.00013721437709081143, 0.00011349307501912547, 0.00010869223167019405, 8.941096006164394e-05, 5.270699258716152e-05, 4.809667472805935e-05, 4.280687326177481e-05, 4.2738812095500265e-05, 4.3908469818368746e-05, 4.3192525050632626e-05, 4.035256709149739e-05, 4.061501149800706e-05, 4.2646187779935276e-05, 3.97313445613849e-05, 4.0936870765365346e-05, 3.6498459958544094e-05, 3.527297825241835e-05, 3.392746212920682e-05, 3.559459000973132e-05, 3.200830545737009e-05, 3.231254083432582e-05, 2.861410928396767e-05, 2.4273171230544676e-05, 2.419078878963066e-05, 2.5424912703998885e-05, 1.768450640279226e-05, 1.552941437287515e-05, 1.1952160460378251e-05, 1.075029126277115e-05, 8.759841034537127e-06]
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    79    511.1 MiB    511.1 MiB           1   @profile
    80                                         def GMRES(k_max, m, A, c, N, eps = 1e-13):
    81    511.1 MiB      0.0 MiB           1   	iterations = []
    82    511.1 MiB      0.0 MiB           1   	residuals = []
    83    511.1 MiB      0.0 MiB           1   	st = time.time()
    84    635.7 MiB    124.5 MiB           1   	I_vec = np.identity(N).reshape((N**2,1), order = 'F')
    85    635.7 MiB      0.0 MiB           1   	s = I_vec
    86   2253.7 MiB    -34.4 MiB          94   	for k in range(k_max):
    87   2253.7 MiB    -34.4 MiB          94   		st_iter = time.time()
    88   2253.7 MiB     89.6 MiB          94   		r = I_vec - G(s, A, c, N)
    89   2253.7 MiB    -31.4 MiB          94   		r = colvecto1dim(r) #reshaping to 1dim vector
    90                                         		
    91   2253.7 MiB    -31.4 MiB          94   		iterations.append(k)
    92   2253.7 MiB    -31.4 MiB          94   		print("Iteration:", k)
    93   2253.7 MiB    -32.0 MiB          94   		residual = np.linalg.norm(I_vec - G(s, A, c, N), ord = 2)
    94   2253.7 MiB    -31.7 MiB          94   		print("Residual:", residual)
    95   2253.7 MiB    -31.7 MiB          94   		residuals.append(residual)
    96   2253.7 MiB    -31.7 MiB          94   		if (residual < eps):
    97   2253.0 MiB     -0.7 MiB           1   			break
    98                                         		
    99   2253.7 MiB    -31.0 MiB          93   		beta = np.linalg.norm(r, ord = 2)
   100   1506.9 MiB -68733.9 MiB          93   		V = np.zeros((N**2,m+1)) #V = np.zeros((N**2,m))
   101   2253.7 MiB  69419.3 MiB          93   		V[:,0] = r/beta #v_1 = r_0/beta
   102   1631.4 MiB -57283.0 MiB          93   		W = np.zeros((N**2,m))
   103   1631.4 MiB    -30.6 MiB          93   		h = np.zeros((m+1, m))
   104   2253.7 MiB  57844.3 MiB          93   		m = Arnoldi(V, W, h, m, A, c, N)
   105   2253.7 MiB    -34.3 MiB          93   		H = Hessenberg(h, m)
   106   2253.7 MiB    -34.3 MiB          93   		y = LSq(beta, H)
   107   2253.7 MiB     90.0 MiB          93   		s = s + (V.T[:m].T)@y #V[:m]???
   108   2253.7 MiB    -34.4 MiB          93   		et_iter = time.time()
   109   2253.7 MiB    -34.4 MiB          93   		print("Iteration time:", et_iter - st_iter)
   110   2253.0 MiB      0.0 MiB           1   	et = time.time()
   111                                         	
   112   2253.0 MiB      0.0 MiB           1   	elapsed = et - st
   113   2253.0 MiB      0.0 MiB           1   	print(f"Elapsed: {elapsed} s")
   114   2253.0 MiB      0.0 MiB           1   	print("Iterations", iterations)
   115   2253.0 MiB      0.0 MiB           1   	print("Residuals", residuals)
   116                                         	#plt.figure()
   117                                         	#plt.grid()
   118   2253.0 MiB      0.0 MiB           1   	res_graph = plt.plot(iterations, residuals, color = 'green')
   119   2253.0 MiB      0.0 MiB           1   	plt.yscale('log')
   120   2253.0 MiB      0.0 MiB           1   	plt.xlabel(r'$Iterations$', fontsize = 12) 
   121   2253.0 MiB      0.0 MiB           1   	plt.ylabel(r'$Local\quadresiduals$', fontsize = 12)
   122                                         	
   123   2253.0 MiB      0.0 MiB           1   	S = s.reshape((N,N), order = 'F')
   124   2253.0 MiB      0.0 MiB           1   	return S


Starting MinRes...
Iteration: 0
Residual: 38.870230466875284
Iteration: 1
Residual: 5.155613616616775
Iteration: 2
Residual: 4.839845067355001
Iteration: 3
Residual: 2.4517438982896866
Iteration: 4
Residual: 2.142806802924318
Iteration: 5
Residual: 1.3789837264301659
Iteration: 6
Residual: 1.1218452024651737
Iteration: 7
Residual: 0.8307238668141587
Iteration: 8
Residual: 0.5973133629269233
Iteration: 9
Residual: 0.6070293097731411
Iteration: 10
Residual: 0.29789183943115705
Iteration: 11
Residual: 0.4070625139801824
Iteration: 12
Residual: 0.16359230458537818
Iteration: 13
Residual: 0.08403402245558537
Iteration: 14
Residual: 0.27600143419739964
Iteration: 15
Residual: 0.222029193506903
Iteration: 16
Residual: 0.13484773072031705
Iteration: 17
Residual: 0.33502514620457774
Iteration: 18
Residual: 0.15103279892290844
Iteration: 19
Residual: 0.13188232980711634
Iteration: 20
Residual: 0.0801988057966369
Iteration: 21
Residual: 0.14842688301944398
Iteration: 22
Residual: 0.05991936359141697
Iteration: 23
Residual: 0.02467228969726524
Iteration: 24
Residual: 0.011510262971176863
Iteration: 25
Residual: 0.011514166719496234
Iteration: 26
Residual: 0.005733149378450907
Iteration: 27
Residual: 0.009446919468527163
Iteration: 28
Residual: 0.0036610334847822935
Iteration: 29
Residual: 0.0014228111708056656
Iteration: 30
Residual: 0.0005834164693898685
Iteration: 31
Residual: 0.0003347866965943064
Iteration: 32
Residual: 0.0006305319114430337
Iteration: 33
Residual: 0.0002597110865843306
Iteration: 34
Residual: 0.0001374885869178975
Iteration: 35
Residual: 0.0002903986942048132
Iteration: 36
Residual: 0.00016369735510065486
Iteration: 37
Residual: 0.00026506412055896203
Iteration: 38
Residual: 0.00012156549941395123
Iteration: 39
Residual: 0.00010046165181537281
Iteration: 40
Residual: 4.557423967712031e-05
Iteration: 41
Residual: 3.280374836075931e-05
Iteration: 42
Residual: 1.9497009186996114e-05
Iteration: 43
Residual: 2.1837720005520873e-05
Iteration: 44
Residual: 9.111757899589079e-06
Elapsed: 69.56690907478333 s
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   126    510.5 MiB    510.5 MiB           1   @profile
   127                                         def MinRes(k_max, A, c, N, eps = 1e-13): # G(S) = I, G(S) = S-c*A.T@S@A+c*diag(A.T@S@A)
   128    526.3 MiB     15.8 MiB           1   	I = np.identity(N)
   129    650.7 MiB    124.4 MiB           1   	I_vec = I.reshape((N**2, 1), order = 'F')
   130    650.7 MiB      0.0 MiB           1   	st = time.time()
   131    650.7 MiB      0.0 MiB           1   	s = I_vec
   132    650.7 MiB      0.0 MiB           1   	residuals = []
   133    650.7 MiB      0.0 MiB           1   	iterations = []
   134                                         	
   135    775.2 MiB    124.6 MiB           1   	r = I_vec - G(s, A, c, N)
   136    899.7 MiB    124.5 MiB           1   	p = G(r, A, c, N)
   137                                         	
   138    899.7 MiB      0.0 MiB           1   	residual = np.linalg.norm(r, ord = 2)
   139    899.7 MiB      0.0 MiB           1   	residuals.append(residual)
   140    899.7 MiB      0.0 MiB           1   	iterations.append(0)
   141    899.7 MiB      0.0 MiB           1   	print(f"Iteration: {0}")
   142    899.7 MiB      0.0 MiB           1   	print(f"Residual: {residual}")
   143                                         	
   144   1024.3 MiB     -4.5 MiB          44   	for k in range(1,k_max):
   145   1024.3 MiB     -4.5 MiB          44   		a = (r.T@r)/(p.T@p)
   146   1024.3 MiB    120.0 MiB          44   		s = s + a*r
   147   1024.3 MiB     -4.3 MiB          44   		r = r - a*p
   148   1024.3 MiB     -4.5 MiB          44   		p = G(r, A, c, N)
   149   1024.3 MiB     -4.9 MiB          44   		iterations.append(k)
   150                                         		#print(S)
   151   1024.3 MiB     -5.0 MiB          44   		residual = np.linalg.norm(r, ord = 2)
   152   1024.3 MiB     -4.7 MiB          44   		residuals.append(residual)
   153   1024.3 MiB     -4.7 MiB          44   		print(f"Iteration: {k}")
   154   1024.3 MiB     -4.7 MiB          44   		print(f"Residual: {residual}")
   155   1024.3 MiB     -4.7 MiB          44   		if (residual < eps):
   156   1024.1 MiB     -0.2 MiB           1   			break
   157   1024.1 MiB      0.0 MiB           1   	et = time.time()
   158   1024.1 MiB      0.0 MiB           1   	elapsed = et - st
   159   1024.1 MiB      0.0 MiB           1   	print(f"Elapsed: {elapsed} s")
   160                                         	#plt.figure()
   161                                         	#plt.grid()
   162   1024.1 MiB      0.0 MiB           1   	res_graph = plt.plot(iterations, residuals, color = 'red')
   163   1024.1 MiB      0.0 MiB           1   	plt.yscale('log')
   164   1024.1 MiB      0.0 MiB           1   	plt.xlabel(r'$Iterations$', fontsize = 12) 
   165   1024.1 MiB      0.0 MiB           1   	plt.ylabel(r'$Local\quadresiduals$', fontsize = 12)
   166   1024.1 MiB      0.0 MiB           1   	S = s.reshape((N,N), order = 'F')
   167   1024.1 MiB      0.0 MiB           1   	return S


Starting Simple Iter...
Iteration: 0
Residual: 38.870230466875284
Iteration: 1
Residual: 5.056075955875118
Iteration: 2
Residual: 4.109524473523071
Iteration: 3
Residual: 2.578016179383769
Iteration: 4
Residual: 1.9943818348447424
Iteration: 5
Residual: 1.4756554141548965
Iteration: 6
Residual: 1.1474862314611314
Iteration: 7
Residual: 0.882917639064732
Iteration: 8
Residual: 0.6909843965896881
Iteration: 9
Residual: 0.5390589930115055
Iteration: 10
Residual: 0.4237014246600742
Iteration: 11
Residual: 0.33261797332348797
Iteration: 12
Residual: 0.2621630633641665
Iteration: 13
Residual: 0.20650144035842632
Iteration: 14
Residual: 0.1630571178736462
Iteration: 15
Residual: 0.12870199541557384
Iteration: 16
Residual: 0.10175231213495596
Iteration: 17
Residual: 0.08042386710621527
Iteration: 18
Residual: 0.06364026812222051
Iteration: 19
Residual: 0.05034948079422816
Iteration: 20
Residual: 0.03986859978284971
Iteration: 21
Residual: 0.031565187264464306
Iteration: 22
Residual: 0.02500733564300289
Iteration: 23
Residual: 0.019810148580045046
Iteration: 24
Residual: 0.0157009029573277
Iteration: 25
Residual: 0.012443380363380278
Iteration: 26
Residual: 0.009865545868061626
Iteration: 27
Residual: 0.007821550078311836
Iteration: 28
Residual: 0.006202948067589171
Iteration: 29
Residual: 0.004919281557207299
Iteration: 30
Residual: 0.003902224066878275
Iteration: 31
Residual: 0.0030954790924910625
Iteration: 32
Residual: 0.002456011277956307
Iteration: 33
Residual: 0.0019486913814917184
Iteration: 34
Residual: 0.0015464190533168
Iteration: 35
Residual: 0.0012272277722249316
Iteration: 36
Residual: 0.0009740534288110316
Iteration: 37
Residual: 0.0007731375345717798
Iteration: 38
Residual: 0.0006137355372871893
Iteration: 39
Residual: 0.00048721857709502626
Iteration: 40
Residual: 0.00038682088055556505
Iteration: 41
Residual: 0.0003071249468628449
Iteration: 42
Residual: 0.0002438699633579692
Iteration: 43
Residual: 0.0001936516733752617
Iteration: 44
Residual: 0.0001537864082855483
Iteration: 45
Residual: 0.00012213345988230768
Iteration: 46
Residual: 9.700224032277045e-05
Iteration: 47
Residual: 7.7045793652558e-05
Iteration: 48
Residual: 6.119893178325288e-05
Iteration: 49
Residual: 4.861370467048185e-05
Iteration: 50
Residual: 3.8618839421649264e-05
Iteration: 51
Residual: 3.068029206297863e-05
Iteration: 52
Residual: 2.4374947367051476e-05
Iteration: 53
Residual: 1.936633305355183e-05
Iteration: 54
Residual: 1.5387698194042932e-05
Iteration: 55
Residual: 1.2226978319843883e-05
Iteration: 56
Residual: 9.715967650165254e-06
Elapsed: 72.74021339416504 s
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/dlyap.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     8    510.5 MiB    510.5 MiB           1   @profile
     9                                         def SimpleIter(k_max, A, c, N, eps = 1e-13): #in most models c = 0.8 and k_max = 5
    10    526.2 MiB     15.8 MiB           1   	I = np.identity(N)
    11    526.2 MiB      0.0 MiB           1   	A = csr_matrix(A)
    12    526.2 MiB      0.0 MiB           1   	st = time.time()
    13    526.2 MiB      0.0 MiB           1   	S = I
    14    526.2 MiB      0.0 MiB           1   	residuals = []
    15    526.2 MiB      0.0 MiB           1   	iterations = []
    16    897.6 MiB     -1.4 MiB          57   	for k in range(k_max):
    17    773.1 MiB  -6847.0 MiB          57   		S_prev = S
    18    773.1 MiB    120.9 MiB          57   		ATSA_factor = A.T@S@A
    19    897.6 MiB   7093.1 MiB          57   		S = c*(ATSA_factor)-c*np.diag(np.diag(ATSA_factor))+I
    20    897.6 MiB     -1.4 MiB          57   		residual = np.linalg.norm(S-S_prev, ord = 'fro') #fro? l2?
    21    897.6 MiB     -1.4 MiB          57   		residuals.append(residual)
    22    897.6 MiB     -1.4 MiB          57   		iterations.append(k)
    23    897.6 MiB     -1.4 MiB          57   		print(f"Iteration: {k}")
    24    897.6 MiB     -1.4 MiB          57   		print(f"Residual: {residual}")
    25                                         		#print(S)
    26    897.6 MiB     -1.4 MiB          57   		if (residual < eps):
    27    897.6 MiB      0.0 MiB           1   			break
    28    897.6 MiB      0.0 MiB           1   	et = time.time()
    29    897.6 MiB      0.0 MiB           1   	elapsed = et - st
    30    897.6 MiB      0.0 MiB           1   	print(f"Elapsed: {elapsed} s")
    31                                         	#plt.figure()
    32                                         	#plt.grid()
    33    897.6 MiB      0.0 MiB           1   	res_graph = plt.plot(iterations, residuals)
    34    897.6 MiB      0.0 MiB           1   	plt.yscale('log')
    35    897.6 MiB      0.0 MiB           1   	plt.xlabel(r'$Iterations$', fontsize = 12) 
    36    897.6 MiB      0.0 MiB           1   	plt.ylabel(r'$Local\quadresiduals$', fontsize = 12)
    37                                         	
    38    897.6 MiB      0.0 MiB           1   	return S


Similarity matrix:
[[1.00000000e+00 3.28114812e-02 3.89381302e-02 ... 0.00000000e+00
  3.23899142e-06 2.15527795e-06]
 [3.28114812e-02 1.00000000e+00 1.89850586e-02 ... 0.00000000e+00
  1.45476096e-06 1.01536508e-06]
 [3.89381302e-02 1.89850586e-02 1.00000000e+00 ... 0.00000000e+00
  1.56985160e-06 1.09310090e-06]
 ...
 [0.00000000e+00 0.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [3.23899142e-06 1.45476096e-06 1.56985160e-06 ... 0.00000000e+00
  1.00000000e+00 8.19108414e-02]
 [2.15527795e-06 1.01536508e-06 1.09310090e-06 ... 0.00000000e+00
  8.19108414e-02 1.00000000e+00]]
Maximum SimScore:  0.7999999971097498
Maximum SimScore index:  (12, 18)
Maximum SimScore:  0.7999999971097498
Maximum SimScore index:  (12, 42)
Maximum SimScore:  0.7999999971097498
Maximum SimScore index:  (12, 52)
Filename: /home/egor-berezin/mticiansred_library/Univer [MGU-Sarov]/Disser mag/programs/SimRank_mainbranch/SimRank_v.1.0/fb.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    37    117.7 MiB    117.7 MiB           1   @profile
    38                                         def Facebook(acc, m_Krylov):
    39    117.7 MiB      0.0 MiB           1   	N = 4039
    40    242.3 MiB    124.5 MiB           1   	A = GetMatrix(N)
    41    258.0 MiB     15.8 MiB           1   	I = np.identity(N) #identity matrix of required dimensions
    42    258.0 MiB      0.0 MiB           1   	print("Adjacency matrix:")
    43    258.0 MiB      0.0 MiB           1   	print(A)
    44    258.0 MiB      0.0 MiB           1   	c = 0.8
    45    382.5 MiB    124.5 MiB           1   	A_n1c = norm1_ColumnNormalize(A) 
    46    382.6 MiB      0.2 MiB           1   	I = np.identity(N)
    47    382.6 MiB      0.0 MiB           1   	print("Similarity matrix:")
    48    382.6 MiB      0.0 MiB           1   	k_iter = 1000000
    49    382.6 MiB      0.0 MiB           1   	print(f"{k_iter} iterations")
    50    382.6 MiB      0.0 MiB           1   	print("Starting GMRES...")
    51    385.0 MiB      2.4 MiB           1   	A_n1c_csr = csr_matrix(A_n1c)
    52    511.1 MiB    126.1 MiB           1   	S_end = dlyap.GMRES(k_iter, m_Krylov+10, A_n1c_csr, c, N, acc)
    53    511.1 MiB      0.0 MiB           1   	dlyap.GMRES(k_iter, m_Krylov+5, A_n1c_csr, c, N, acc)
    54    510.5 MiB     -0.6 MiB           1   	dlyap.GMRES(k_iter, m_Krylov, A_n1c_csr, c, N, acc)
    55    510.5 MiB      0.0 MiB           1   	print("Starting MinRes...")
    56    510.5 MiB     -0.1 MiB           1   	dlyap.MinRes(k_iter, A_n1c_csr, c, N, acc)
    57    510.5 MiB      0.0 MiB           1   	print("Starting Simple Iter...")
    58    510.6 MiB      0.1 MiB           1   	dlyap.SimpleIter(k_iter, A_n1c_csr, c, N, acc)
    59    510.6 MiB      0.0 MiB           1   	'''
    60                                         	print("Singular values::")
    61                                         	sigma = np.linalg.svd(S_end, full_matrices = False)[1]
    62                                         	print(sigma.tolist())
    63                                         	'''
    64    517.0 MiB      6.4 MiB           1   	plt.savefig("Facebook_eps_"+str(acc)+"_"+str(dt.datetime.now())+".png")
    65    517.0 MiB      0.0 MiB           1   	print("Similarity matrix:")
    66    517.1 MiB      0.1 MiB           1   	print(S_end)
    67                                         	
    68    519.7 MiB      2.6 MiB           1   	plt.figure()
    69    644.5 MiB    124.8 MiB           1   	graph = plt.imshow(np.log(S_end-I+1e-15))
    70    644.6 MiB      0.1 MiB           1   	cbar = plt.colorbar()
    71    644.6 MiB      0.0 MiB           1   	cbar.set_label("ln(S[i,j])")
    72                                         	#plt.title("Facebook")
    73    644.6 MiB      0.0 MiB           1   	plt.title("Матрица S", fontweight = "bold")
    74    644.6 MiB      0.0 MiB           1   	topn = 3
    75    784.8 MiB      0.0 MiB           4   	for count in range(topn): #top n
    76    784.8 MiB    140.1 MiB           3   		S_end_triu = np.triu(S_end)
    77    784.8 MiB      0.1 MiB           3   		smax = np.argmax(S_end_triu-I, axis=None)
    78    784.8 MiB      0.0 MiB           3   		indmax = np.unravel_index(smax, (S_end-I).shape)
    79    784.8 MiB      0.0 MiB           3   		print("Maximum SimScore: ", S_end[indmax])
    80    784.8 MiB      0.0 MiB           3   		print("Maximum SimScore index: ", indmax)
    81    784.8 MiB      0.0 MiB           3   		S_end[indmax] = 0



